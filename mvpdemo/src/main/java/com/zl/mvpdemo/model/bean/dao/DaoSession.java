package com.zl.mvpdemo.model.bean.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.zl.mvpdemo.model.bean.dao.User;
import com.zl.mvpdemo.model.bean.dao.gankDataDb.GankDataDB;
import com.zl.mvpdemo.model.bean.dao.imagesDB.ImagesDB;

import com.zl.mvpdemo.model.bean.dao.UserDao;
import com.zl.mvpdemo.model.bean.dao.gankDataDb.GankDataDBDao;
import com.zl.mvpdemo.model.bean.dao.imagesDB.ImagesDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig gankDataDBDaoConfig;
    private final DaoConfig imagesDBDaoConfig;

    private final UserDao userDao;
    private final GankDataDBDao gankDataDBDao;
    private final ImagesDBDao imagesDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        gankDataDBDaoConfig = daoConfigMap.get(GankDataDBDao.class).clone();
        gankDataDBDaoConfig.initIdentityScope(type);

        imagesDBDaoConfig = daoConfigMap.get(ImagesDBDao.class).clone();
        imagesDBDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        gankDataDBDao = new GankDataDBDao(gankDataDBDaoConfig, this);
        imagesDBDao = new ImagesDBDao(imagesDBDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(GankDataDB.class, gankDataDBDao);
        registerDao(ImagesDB.class, imagesDBDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        gankDataDBDaoConfig.clearIdentityScope();
        imagesDBDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public GankDataDBDao getGankDataDBDao() {
        return gankDataDBDao;
    }

    public ImagesDBDao getImagesDBDao() {
        return imagesDBDao;
    }

}
